# Makefile for 'school' executable

# Compiler and flags
CC = gcc
CFLAGS = -Wall -Werror -Wextra -pedantic

# Source files
SRC = main.c school.c

# Object files (generated dynamically)
OBJ = $(SRC:.c=.o)

# Name of the executable
NAME = school

# Default rule to build the executable
all: $(NAME)

# Rule to build the executable
$(NAME): $(OBJ)
	$(CC) $(CFLAGS) -o $(NAME) $(OBJ)

# Rule to build object files from source files
main.o: main.c m.h
	$(CC) $(CFLAGS) -c -o main.o main.c

school.o: school.c m.h
	$(CC) $(CFLAGS) -c -o school.o school.c

# Clean rule to delete Emacs and Vim temp files and the executable
clean:
	$(RM) *~ \#*\# $(NAME)

# Clean rule to delete object files
oclean:
	$(RM) $(OBJ)

# Clean rule to delete temp files, executable, and object files
fclean: clean oclean

# Rule to force recompilation of all source files
re: fclean all

# PHONY rule to avoid conflicts with file names
.PHONY: all clean oclean fclean re
